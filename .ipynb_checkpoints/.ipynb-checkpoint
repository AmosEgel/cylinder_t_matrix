{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "import smuthi.spherical_functions as sf\n",
    "theta = np.linspace(0,np.pi,30)\n",
    "\n",
    "ct = np.cos(theta)\n",
    "st = np.sin(theta)\n",
    "\n",
    "lmax = 5\n",
    "\n",
    "[p, pi, tau] = sf.legendre_normalized(ct,st,lmax)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678])], [array([ 1.22474487,  1.21756536,  1.19611102,  1.16063336,  1.11154834,\n",
      "        1.04943143,  0.9750109 ,  0.88915926,  0.79288303,  0.68731098,\n",
      "        0.57368084,  0.45332481,  0.32765396,  0.19814167,  0.06630635,\n",
      "       -0.06630635, -0.19814167, -0.32765396, -0.45332481, -0.57368084,\n",
      "       -0.68731098, -0.79288303, -0.88915926, -0.9750109 , -1.04943143,\n",
      "       -1.11154834, -1.16063336, -1.19611102, -1.21756536, -1.22474487]), array([0.00000000e+00, 9.36338166e-02, 1.86169862e-01, 2.76523237e-01,\n",
      "       3.63634629e-01, 4.46482737e-01, 5.24096244e-01, 5.95565202e-01,\n",
      "       6.60051702e-01, 7.16799699e-01, 7.65143875e-01, 8.04517439e-01,\n",
      "       8.34458771e-01, 8.54616838e-01, 8.64755303e-01, 8.64755303e-01,\n",
      "       8.54616838e-01, 8.34458771e-01, 8.04517439e-01, 7.65143875e-01,\n",
      "       7.16799699e-01, 6.60051702e-01, 5.95565202e-01, 5.24096244e-01,\n",
      "       4.46482737e-01, 3.63634629e-01, 2.76523237e-01, 1.86169862e-01,\n",
      "       9.36338166e-02, 1.06057524e-16]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678])], [array([ 1.58113883,  1.55341422,  1.47153676,  1.33933495,  1.1629904 ,\n",
      "        0.95074879,  0.71253429,  0.45948556,  0.20343486, -0.04364515,\n",
      "       -0.27020129, -0.46564004, -0.62082291, -0.72849371, -0.78361789,\n",
      "       -0.78361789, -0.72849371, -0.62082291, -0.46564004, -0.27020129,\n",
      "       -0.04364515,  0.20343486,  0.45948556,  0.71253429,  0.95074879,\n",
      "        1.1629904 ,  1.33933495,  1.47153676,  1.55341422,  1.58113883]), array([ 0.00000000e+00,  2.08144234e-01,  4.06555874e-01,  5.85957414e-01,\n",
      "        7.37960237e-01,  8.55456859e-01,  9.32953269e-01,  9.66825821e-01,\n",
      "        9.55490672e-01,  8.99477841e-01,  8.01406426e-01,  6.65862138e-01,\n",
      "        4.99182876e-01,  3.09162377e-01,  1.04685789e-01, -1.04685789e-01,\n",
      "       -3.09162377e-01, -4.99182876e-01, -6.65862138e-01, -8.01406426e-01,\n",
      "       -8.99477841e-01, -9.55490672e-01, -9.66825821e-01, -9.32953269e-01,\n",
      "       -8.55456859e-01, -7.37960237e-01, -5.85957414e-01, -4.06555874e-01,\n",
      "       -2.08144234e-01, -2.37151833e-16]), array([0.00000000e+00, 1.13185248e-02, 4.47448575e-02, 9.87160201e-02,\n",
      "       1.70708381e-01, 2.57355657e-01, 3.54606318e-01, 4.57913032e-01,\n",
      "       5.62445291e-01, 6.63315282e-01, 7.55806438e-01, 8.35593974e-01,\n",
      "       8.98947115e-01, 9.42903537e-01, 9.65407887e-01, 9.65407887e-01,\n",
      "       9.42903537e-01, 8.98947115e-01, 8.35593974e-01, 7.55806438e-01,\n",
      "       6.63315282e-01, 5.62445291e-01, 4.57913032e-01, 3.54606318e-01,\n",
      "       2.57355657e-01, 1.70708381e-01, 9.87160201e-02, 4.47448575e-02,\n",
      "       1.13185248e-02, 1.45213617e-32]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678])], [array([ 1.87082869,  1.80550865,  1.61600475,  1.32101432,  0.94953161,\n",
      "        0.53783448,  0.12571698, -0.24763807, -0.54771481, -0.74822427,\n",
      "       -0.83379665, -0.80152443, -0.66119586, -0.43419507, -0.15118477,\n",
      "        0.15118477,  0.43419507,  0.66119586,  0.80152443,  0.83379665,\n",
      "        0.74822427,  0.54771481,  0.24763807, -0.12571698, -0.53783448,\n",
      "       -0.94953161, -1.32101432, -1.61600475, -1.80550865, -1.87082869]), array([ 0.00000000e+00,  3.45226357e-01,  6.56345422e-01,  9.02796853e-01,\n",
      "        1.06074315e+00,  1.11554224e+00,  1.06325823e+00,  9.11052347e-01,\n",
      "        6.76413405e-01,  3.85308631e-01,  6.94486203e-02, -2.37047022e-01,\n",
      "       -5.01234116e-01, -6.94802985e-01, -7.97049934e-01, -7.97049934e-01,\n",
      "       -6.94802985e-01, -5.01234116e-01, -2.37047022e-01,  6.94486203e-02,\n",
      "        3.85308631e-01,  6.76413405e-01,  9.11052347e-01,  1.06325823e+00,\n",
      "        1.11554224e+00,  1.06074315e+00,  9.02796853e-01,  6.56345422e-01,\n",
      "        3.45226357e-01,  3.96830918e-16]), array([ 0.00000000e+00,  2.97704571e-02,  1.15616019e-01,  2.47506197e-01,\n",
      "        4.09908183e-01,  5.83433252e-01,  7.46894619e-01,  8.79560966e-01,\n",
      "        9.63369293e-01,  9.84864936e-01,  9.36665058e-01,  8.18291756e-01,\n",
      "        6.36286861e-01,  4.03595649e-01,  1.38283180e-01, -1.38283180e-01,\n",
      "       -4.03595649e-01, -6.36286861e-01, -8.18291756e-01, -9.36665058e-01,\n",
      "       -9.84864936e-01, -9.63369293e-01, -8.79560966e-01, -7.46894619e-01,\n",
      "       -5.83433252e-01, -4.09908183e-01, -2.47506197e-01, -1.15616019e-01,\n",
      "       -2.97704571e-02, -3.84199116e-32]), array([0.00000000e+00, 1.32179869e-03, 1.03895149e-02, 3.40456815e-02,\n",
      "       7.74217245e-02, 1.43311537e-01, 2.31792981e-01, 3.40137943e-01,\n",
      "       4.63021335e-01, 5.93008039e-01, 7.21267654e-01, 8.38442965e-01,\n",
      "       9.35581855e-01, 1.00503566e+00, 1.04123040e+00, 1.04123040e+00,\n",
      "       1.00503566e+00, 9.35581855e-01, 8.38442965e-01, 7.21267654e-01,\n",
      "       5.93008039e-01, 4.63021335e-01, 3.40137943e-01, 2.31792981e-01,\n",
      "       1.43311537e-01, 7.74217245e-02, 3.40456815e-02, 1.03895149e-02,\n",
      "       1.32179869e-03, 1.92084176e-48]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678])], [array([ 2.12132034,  1.99860033,  1.65098479,  1.13640964,  0.53978838,\n",
      "       -0.04220693, -0.51837891, -0.81909649, -0.90830631, -0.78928381,\n",
      "       -0.50310349, -0.1201545 ,  0.2736885 ,  0.59364467,  0.77225873,\n",
      "        0.77225873,  0.59364467,  0.2736885 , -0.1201545 , -0.50310349,\n",
      "       -0.78928381, -0.90830631, -0.81909649, -0.51837891, -0.04220693,\n",
      "        0.53978838,  1.13640964,  1.65098479,  1.99860033,  2.12132034]), array([ 0.00000000e+00,  4.99417215e-01,  9.15318194e-01,  1.17921310e+00,\n",
      "        1.24990652e+00,  1.12075771e+00,  8.20607641e-01,  4.08215452e-01,\n",
      "       -3.87563314e-02, -4.38164615e-01, -7.18547411e-01, -8.32222785e-01,\n",
      "       -7.63908933e-01, -5.33281037e-01, -1.91004789e-01,  1.91004789e-01,\n",
      "        5.33281037e-01,  7.63908933e-01,  8.32222785e-01,  7.18547411e-01,\n",
      "        4.38164615e-01,  3.87563314e-02, -4.08215452e-01, -8.20607641e-01,\n",
      "       -1.12075771e+00, -1.24990652e+00, -1.17921310e+00, -9.15318194e-01,\n",
      "       -4.99417215e-01, -5.80900982e-16]), array([ 0.00000000e+00,  5.80106908e-02,  2.19965957e-01,  4.51931059e-01,\n",
      "        7.04573048e-01,  9.22581721e-01,  1.05529624e+00,  1.06655425e+00,\n",
      "        9.41920319e-01,  6.91931931e-01,  3.50736223e-01, -2.96580521e-02,\n",
      "       -3.88477099e-01, -6.66969899e-01, -8.18914028e-01, -8.18914028e-01,\n",
      "       -6.66969899e-01, -3.88477099e-01, -2.96580521e-02,  3.50736223e-01,\n",
      "        6.91931931e-01,  9.41920319e-01,  1.06655425e+00,  1.05529624e+00,\n",
      "        9.22581721e-01,  7.04573048e-01,  4.51931059e-01,  2.19965957e-01,\n",
      "        5.80106908e-02,  7.54552085e-32]), array([ 0.00000000e+00,  3.94215074e-03,  3.04398415e-02,  9.67904942e-02,\n",
      "        2.10798162e-01,  3.68392557e-01,  5.53586353e-01,  7.40815839e-01,\n",
      "        8.99260986e-01,  9.98365323e-01,  1.01354357e+00,  9.31019197e-01,\n",
      "        7.50883977e-01,  4.87790029e-01,  1.69113232e-01, -1.69113232e-01,\n",
      "       -4.87790029e-01, -7.50883977e-01, -9.31019197e-01, -1.01354357e+00,\n",
      "       -9.98365323e-01, -8.99260986e-01, -7.40815839e-01, -5.53586353e-01,\n",
      "       -3.68392557e-01, -2.10798162e-01, -9.67904942e-02, -3.04398415e-02,\n",
      "       -3.94215074e-03, -5.76252527e-48]), array([0.00000000e+00, 1.51580617e-04, 2.36891936e-03, 1.15302651e-02,\n",
      "       3.44805118e-02, 7.83666814e-02, 1.48784249e-01, 2.48101863e-01,\n",
      "       3.74304103e-01, 5.20599833e-01, 6.75904273e-01, 8.26141839e-01,\n",
      "       9.56163814e-01, 1.05195836e+00, 1.10277193e+00, 1.10277193e+00,\n",
      "       1.05195836e+00, 9.56163814e-01, 8.26141839e-01, 6.75904273e-01,\n",
      "       5.20599833e-01, 3.74304103e-01, 2.48101863e-01, 1.48784249e-01,\n",
      "       7.83666814e-02, 3.44805118e-02, 1.15302651e-02, 2.36891936e-03,\n",
      "       1.51580617e-04, 2.49504683e-64]), array([0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678,\n",
      "       0.70710678, 0.70710678, 0.70710678, 0.70710678, 0.70710678])], [array([ 2.34520788,  2.14319024,  1.58799166,  0.81826485,  0.02264535,\n",
      "       -0.61133703, -0.94729423, -0.93501456, -0.6208776 , -0.13107223,\n",
      "        0.36722219,  0.71530956,  0.80878713,  0.62655307,  0.23481545,\n",
      "       -0.23481545, -0.62655307, -0.80878713, -0.71530956, -0.36722219,\n",
      "        0.13107223,  0.6208776 ,  0.93501456,  0.94729423,  0.61133703,\n",
      "       -0.02264535, -0.81826485, -1.58799166, -2.14319024, -2.34520788]), array([ 0.00000000e+00,  6.66245070e-01,  1.16509839e+00,  1.37492297e+00,\n",
      "        1.25271611e+00,  8.44900830e-01,  2.73095971e-01, -3.00966068e-01,\n",
      "       -7.21305470e-01, -8.81262530e-01, -7.52410110e-01, -3.90705933e-01,\n",
      "        8.16667281e-02,  5.13345539e-01,  7.68899115e-01,  7.68899115e-01,\n",
      "        5.13345539e-01,  8.16667281e-02, -3.90705933e-01, -7.52410110e-01,\n",
      "       -8.81262530e-01, -7.21305470e-01, -3.00966068e-01,  2.73095971e-01,\n",
      "        8.44900830e-01,  1.25271611e+00,  1.37492297e+00,  1.16509839e+00,\n",
      "        6.66245070e-01,  7.86543648e-16]), array([ 0.00000000e+00,  9.70061162e-02,  3.56874457e-01,  6.95347053e-01,\n",
      "        9.99974803e-01,  1.16354530e+00,  1.11632702e+00,  8.47742876e-01,\n",
      "        4.11097193e-01, -9.01652110e-02, -5.30882087e-01, -7.99254024e-01,\n",
      "       -8.28604003e-01, -6.16735037e-01, -2.27300315e-01,  2.27300315e-01,\n",
      "        6.16735037e-01,  8.28604003e-01,  7.99254024e-01,  5.30882087e-01,\n",
      "        9.01652110e-02, -4.11097193e-01, -8.47742876e-01, -1.11632702e+00,\n",
      "       -1.16354530e+00, -9.99974803e-01, -6.95347053e-01, -3.56874457e-01,\n",
      "       -9.70061162e-02, -1.27424431e-31]), array([ 0.00000000e+00,  8.65251552e-03,  6.53333707e-02,  1.99930931e-01,\n",
      "        4.11695925e-01,  6.66366205e-01,  9.04050387e-01,  1.05580516e+00,\n",
      "        1.06421066e+00,  9.01957006e-01,  5.82888049e-01,  1.61995745e-01,\n",
      "       -2.76053979e-01, -6.37031362e-01, -8.40568358e-01, -8.40568358e-01,\n",
      "       -6.37031362e-01, -2.76053979e-01,  1.61995745e-01,  5.82888049e-01,\n",
      "        9.01957006e-01,  1.06421066e+00,  1.05580516e+00,  9.04050387e-01,\n",
      "        6.66366205e-01,  4.11695925e-01,  1.99930931e-01,  6.53333707e-02,\n",
      "        8.65251552e-03,  1.27414228e-47]), array([ 0.00000000e+00,  4.99788973e-04,  7.67312867e-03,  3.62397386e-02,\n",
      "        1.03789345e-01,  2.22708215e-01,  3.92841301e-01,  5.97393222e-01,\n",
      "        8.03682338e-01,  9.68964842e-01,  1.05004098e+00,  1.01417947e+00,\n",
      "        8.48395661e-01,  5.64449485e-01,  1.98012014e-01, -1.98012014e-01,\n",
      "       -5.64449485e-01, -8.48395661e-01, -1.01417947e+00, -1.05004098e+00,\n",
      "       -9.68964842e-01, -8.03682338e-01, -5.97393222e-01, -3.92841301e-01,\n",
      "       -2.22708215e-01, -1.03789345e-01, -3.62397386e-02, -7.67312867e-03,\n",
      "       -4.99788973e-04, -8.27513416e-64]), array([0.00000000e+00, 1.71886634e-05, 5.34103429e-04, 3.86132748e-03,\n",
      "       1.51846452e-02, 4.23742319e-02, 9.44351588e-02, 1.78947259e-01,\n",
      "       2.99204591e-01, 4.51926231e-01, 6.26316724e-01, 8.04925693e-01,\n",
      "       9.66279795e-01, 1.08876889e+00, 1.15490071e+00, 1.15490071e+00,\n",
      "       1.08876889e+00, 9.66279795e-01, 8.04925693e-01, 6.26316724e-01,\n",
      "       4.51926231e-01, 2.99204591e-01, 1.78947259e-01, 9.44351588e-02,\n",
      "       4.23742319e-02, 1.51846452e-02, 3.86132748e-03, 5.34103429e-04,\n",
      "       1.71886634e-05, 3.20468904e-80])]]\n"
     ]
    }
   ],
   "source": [
    "print(p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.         1.33333333 2.66666667 4.        ]\n"
     ]
    }
   ],
   "source": [
    "print(np.linspace(0,4,4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'gaussian_quadrature'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-18-8a5c4d84ca42>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;32mimport\u001b[0m \u001b[0mgaussian_quadrature\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'gaussian_quadrature'"
     ]
    }
   ],
   "source": [
    "import gaussian_quadrature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'gaussian_quadrature'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-19-78d509695678>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;32mimport\u001b[0m \u001b[0mgaussian_quadrature\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpy\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'gaussian_quadrature'"
     ]
    }
   ],
   "source": [
    "import gaussian_quadrature.py"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'gaussian_quadrature'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-20-14632d9d376d>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;32mimport\u001b[0m \u001b[0mgaussian_quadrature\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mqp\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'gaussian_quadrature'"
     ]
    }
   ],
   "source": [
    "import gaussian_quadrature as qp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
